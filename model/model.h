#ifdef INCLUDED_BY_NEUTON_C

/* Model info */
#define NEUTON_MODEL_HEADER_VERSION 1
#define NEUTON_MODEL_QLEVEL 32
#define NEUTON_MODEL_FLOAT_SUPPORT 1
#define NEUTON_MODEL_TASK_TYPE 0  // multiclass classification
#define NEUTON_MODEL_NEURONS_COUNT 67
#define NEUTON_MODEL_WEIGHTS_COUNT 402
#define NEUTON_MODEL_INPUTS_COUNT 255
#define NEUTON_MODEL_INPUT_LIMITS_COUNT 255
#define NEUTON_MODEL_OUTPUTS_COUNT 14
#define NEUTON_MODEL_LOG_SCALE_OUTPUTS 0

/* Preprocessing */
#define NEUTON_PREPROCESSING_ENABLED 0
#define NEUTON_BITMASK_ENABLED 0

/* Limits */
static const float modelInputMin[] = {
	249, 3347, 3664, 3981, 5681, 4729, 4413, 4097, 4100, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
static const float modelInputMax[] = {
	71783, 70145, 65379, 63778, 62157, 60236, 59596, 57676, 59623, 63471, 66360,
	68289, 69900, 70648, 76477, 73548, 76761, 83507, 69301, 67396, 66500, 67337,
	67985, 68631, 76126, 68962, 69285, 69288, 69291, 69293, 69295, 69296, 69299,
	68213, 68400, 76430, 69361, 73877, 66649, 67418, 72573, 69000, 68935, 69575,
	70535, 70972, 71931, 72571, 73210, 69680, 70508, 71468, 72428, 70253, 70893,
	71213, 71853, 69347, 69667, 69987, 70307, 70948, 69010, 69330, 69650, 69970,
	70290, 70610, 68888, 69854, 70499, 70822, 71148, 67047, 67680, 68314, 68949,
	69264, 69260, 69619, 70550, 70257, 71170, 72142, 72475, 71851, 70908, 68590,
	69234, 69878, 70201, 70572, 71219, 71546, 71553, 71559, 71565, 71569, 75457,
	71574, 71576, 71816, 72140, 72464, 72466, 72788, 72790, 72792, 72795, 69543,
	69865, 69867, 69887, 69890, 65773, 66365, 66691, 67017, 67025, 67032, 66717,
	66722, 66405, 66988, 67314, 67639, 67964, 67968, 68292, 68307, 68312, 68316,
	68319, 68322, 68324, 68326, 68327, 68328, 67645, 67646, 67648, 66705, 67352,
	67678, 67685, 68010, 68015, 68019, 68023, 68026, 68028, 68031, 68032, 68033,
	68034, 68035, 68036, 66316, 66320, 66644, 66647, 66649, 66651, 66653, 67922,
	69206, 70491, 71457, 72103, 72750, 73077, 73084, 73092, 73099, 72785, 72790,
	72473, 72476, 72478, 72160, 72161, 72162, 72163, 72164, 72165, 71848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

static const float modelOutputMin[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
static const float modelOutputMax[] = {
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };

/* Types */
typedef float coeff_t;
typedef float weight_t;
typedef double acc_signed_t;
typedef double acc_unsigned_t;
typedef uint8_t sources_size_t;
typedef uint16_t weights_size_t;
typedef uint8_t neurons_size_t;

/* Structure */
static const weight_t modelWeights[] = {
	0.20951888, -0.91519541, 0.68242145, 0.095836617, 0.99992752, 0.12376386,
	-0.60912335, 0.60049713, 1, 0.99963379, -0.5711078, -0.15819836, -0.88839716,
	1, 0.13904126, -0.75046933, 0.99999809, 0.44349957, -0.3560932, 0.65962029,
	0.24999999, 0.71440446, -0.90947413, -0.11258043, -0.25309154, -0.99707055,
	0.25460067, 0.26621926, 0.99995422, 0.984375, -0.61375135, -0.43355146,
	0.84561658, -0.59537071, 0.99999774, 0.97607374, 0.9996717, 0.01371925,
	-0.53692079, -0.26746207, -0.033604097, -0.41460246, 0.31505167, -0.97830915,
	0.37028906, -0.30030578, 0.99993134, 0.8125, 0.99902332, -0.51234847, 0.98828167,
	-0.62716311, -0.16273323, 0.99981689, 0.83593845, -0.99996495, 0.79227209,
	0.049395639, 0.019727457, 0.9999994, 0.0023361444, 0.5, -0.5, -0.5, 0,
	-1, 0, 0.80439019, -0.57741266, -0.23486637, 0.99999964, -0.55213851, 0.27680957,
	-0.75, -0.43685615, -0.22879893, -0.24200183, 0.5, 0.5, 0.21519355, 0.34169191,
	0.99352491, -0.92268741, -0.48605326, 0.51220798, 0.28299904, 1, 0.079215638,
	-0.80194575, 0.99999332, -1, -0.16980791, -0.17447692, 0.55666214, -0.99906147,
	0.55792916, 0.33723736, 0.22370882, 0.093742132, -0.034006119, -1, 0.99999595,
	0.41147664, 0.86881167, 0.99999958, -0.90429688, -0.802966, -1, 0.21219981,
	0.30535594, 0.38512671, -1, -0.69947976, 0.99997759, 0.35327148, -1, 0.77240688,
	-1, -0.40449774, 0.34259596, 0.77079511, 0.51806259, 0, -0.5, 1, -0.5,
	-0.5, 0.5, 0.51251018, -1, 0.32482973, -0.28267074, 0.75, 0.75, -0.50680369,
	-1, 0.86893153, -0.20392114, -0.41757867, 0.26676691, 0.94328201, -0.98171008,
	-1, -0.35656324, 0.41447529, -1, 0.084936261, -0.89631176, 0.99999642,
	-0.8173306, 0.85191482, 0.99998856, 0.91575366, -1, 0.60650468, -0.36297923,
	-0.43567687, -1, -0.078096747, -0.54992187, -0.99999964, 0.58844846, 0.27036223,
	-1, -0.3919239, 1, -0.69927305, -0.89691496, 1, 0.8165164, -1, 0, 0.71426392,
	-0.38299841, -0.875, 0.55083013, -0.80542678, 0.057090104, -1, 1, -0.9375,
	-0.97230029, 0.1109523, -0.6209656, 0.28007954, -1, 0.3166388, 0.67787683,
	0.41211462, -0.5061841, -0.36832839, 0.95379353, 0.98828125, -1, -0.19824149,
	-0.4727909, -1, 0.2544277, -0.72124213, 0.13077325, -0.18372831, -0.95486355,
	0.58152264, -1, 0.67081755, 0.99951017, 0, 0.39325395, -0.33619156, -0.79298258,
	0.99999988, -1, -0.76461953, -0.99999988, 0.1820439, -0.19602516, -0.72453964,
	0.64545029, 0.39537811, -0.32727748, -1, -0.79018849, 0.68500429, -0.27216175,
	0.11773135, -0.3628678, 0.017068317, -0.59755647, 0.25571999, -0.82699609,
	0.37500048, -0.66236669, 1, -0.44230214, 0.38273785, -0.52398384, -0.28625691,
	0.33748731, -0.8006711, 1, 0.55158323, -0.41358948, -0.99930334, 0.97024965,
	-0.084178232, -0.49188632, 0.953125, -0.0035572052, -0.4375, -0.64062333,
	-1, -1, 0.32554901, -0.13094465, -0.50704497, -0.99975091, 0.74790907,
	-1, -0.99218726, 0.75003767, 0.2850284, -0.81046885, -0.74092692, 0.75612146,
	0.25, -0.25, -0.26072365, -0.82328391, 1, -1, -1, -1, 0.11718774, 0.34259334,
	0.59410131, 0.65907931, -1, -1, -0.84374994, -0.23388042, -0.70741361,
	-0.069673985, -0.57762581, -1, -0.94504553, 0.21688075, -0.79068017, -1,
	-1, 1, -1, -1, -1, 0.15625, -0.073803753, -0.37833655, -0.90635818, 0.98469961,
	-1, -0.015769958, -0.99999988, -1, -0.94165009, -0.52907985, 0.4563958,
	-0.87750244, 0.9989056, -0.11456637, 0.2183363, -0.96833259, 0.3788147,
	-0.24289364, -0.9375, -0.26423657, 1, -1, 0, -1, -1, 0.18379192, -1, -0.068467483,
	0.875, 0.45446098, -0.625, 0.75, -1, -1, -0.86110616, -0.23815206, 1, -0.89296323,
	0.73111862, 1, 0, -0.91857982, -0.98437405, 0.22073846, -0.78575575, -0.031561982,
	-0.99999988, -0.092830136, 0.68233716, -0.25, -0.61828303, 0.9669354, -0.69750905,
	-1, -0.93119437, 0.30669737, -0.66820657, -0.71501172, -0.21859725, 0.53816599,
	-0.97717839, 0.80270332, 0.99999976, -0.64737356, 0.92894119, -0.95793408,
	0.60766399, 0.99999976, 0.035104036, -0.49053383, 0.70021498, -0.99998164,
	-0.99999994, 0.15359855, -0.32033208, -0.33081964, -0.43421584, -0.066531844,
	1, 0.87109387, 0.49332044, -1, 0.66309881, -0.73118114, -0.56042904, 0.32085752,
	0.18314382, -0.16765574, -1, -1, -1, 0.03213501, -0.53484112, -0.99999952,
	0.24684401, -1, 0.33713377, 0.14085868, 0.00028229231, -0.13185149, -0.076849572,
	0.93175018, -1, -0.30738068, -1, 0.5, -0.34206372, 0 };

static const sources_size_t modelLinks[] = {
	12, 18, 24, 45, 91, 255, 9, 19, 31, 60, 132, 255, 0, 5, 13, 33, 103, 255,
	5, 6, 15, 28, 31, 255, 1, 2, 0, 18, 125, 255, 1, 2, 12, 36, 87, 255, 0,
	7, 14, 27, 61, 109, 255, 6, 17, 23, 44, 59, 255, 0, 1, 25, 34, 104, 255,
	0, 1, 28, 67, 77, 255, 63, 69, 84, 88, 93, 255, 9, 16, 27, 40, 127, 255,
	1, 12, 62, 71, 147, 255, 4, 12, 0, 9, 42, 99, 255, 6, 33, 39, 74, 119,
	255, 9, 0, 31, 44, 51, 76, 85, 255, 12, 13, 21, 28, 66, 255, 1, 16, 255,
	10, 6, 21, 44, 124, 255, 13, 4, 17, 18, 20, 31, 255, 2, 6, 0, 2, 8, 255,
	3, 6, 20, 18, 97, 255, 7, 16, 28, 35, 50, 255, 4, 8, 20, 27, 42, 60, 255,
	13, 18, 40, 69, 83, 255, 10, 33, 60, 67, 118, 255, 18, 21, 10, 33, 95,
	255, 25, 0, 15, 39, 54, 141, 150, 154, 255, 3, 0, 32, 62, 152, 255, 13,
	28, 255, 8, 36, 47, 48, 50, 255, 6, 30, 7, 94, 124, 255, 4, 20, 30, 31,
	255, 0, 1, 2, 3, 14, 33, 255, 24, 15, 23, 56, 124, 255, 10, 0, 8, 31, 44,
	255, 2, 18, 33, 34, 35, 255, 0, 2, 3, 4, 19, 255, 7, 23, 37, 255, 0, 1,
	2, 3, 20, 32, 255, 24, 27, 43, 50, 109, 255, 0, 15, 39, 40, 255, 0, 1,
	2, 3, 58, 62, 255, 20, 22, 71, 78, 164, 255, 22, 36, 40, 62, 71, 143, 255,
	3, 35, 60, 136, 154, 255, 8, 24, 42, 43, 44, 45, 255, 0, 1, 2, 3, 55, 56,
	57, 255, 5, 55, 63, 65, 159, 255, 12, 27, 47, 48, 255, 0, 1, 2, 3, 35,
	255, 21, 60, 62, 66, 136, 255, 9, 14, 50, 51, 255, 0, 1, 2, 3, 49, 255,
	1, 14, 23, 15, 26, 27, 255, 3, 19, 53, 54, 255, 0, 1, 2, 3, 8, 255, 5,
	21, 56, 255, 0, 1, 3, 4, 15, 255, 35, 45, 5, 12, 61, 76, 255, 11, 26, 58,
	59, 255, 1, 2, 3, 4, 39, 255, 50, 56, 19, 24, 81, 255, 16, 28, 36, 38,
	58, 255, 6, 22, 61, 62, 63, 255, 0, 1, 2, 3, 35, 255, 10, 25, 65, 255 };

static const weights_size_t modelIntLinksBoundaries[] = {
	0, 6, 12, 18, 26, 32, 36, 44, 50, 55, 61, 68, 73, 81, 86, 93, 101, 108,
	110, 116, 124, 131, 134, 140, 149, 154, 161, 166, 175, 182, 184, 191, 199,
	204, 208, 214, 224, 230, 234, 240, 242, 252, 257, 262, 266, 274, 285, 290,
	294, 304, 309, 311, 321, 326, 331, 339, 345, 349, 355, 358, 367, 373, 376,
	382, 391, 396, 401 };
static const weights_size_t modelExtLinksBoundaries[] = {
	6, 12, 18, 24, 30, 36, 43, 49, 55, 61, 67, 73, 79, 86, 92, 100, 106, 109,
	115, 122, 128, 134, 140, 147, 153, 159, 165, 174, 180, 183, 189, 195, 200,
	207, 213, 219, 225, 231, 235, 242, 248, 253, 260, 266, 273, 279, 286, 294,
	300, 305, 311, 317, 322, 328, 335, 340, 346, 350, 356, 363, 368, 374, 380,
	386, 392, 398, 402 };

static const coeff_t modelFuncCoeffs[] = {
	25.037516, 24.726196, 18.179642, 27.531246, 40, 28.680721, 20.673481, 40,
	22.543736, 40, 39.999977, 28.622429, 21.296867, 17.474136, 39.999969, 38.753113,
	39.999966, 9.6100225, 40, 39.999973, 40, 39.999943, 40, 39.999977, 39.999992,
	40, 30.024984, 40, 27.531237, 34.957802, 30.024992, 39.999985, 17.556252,
	40, 39.999977, 40, 30.025002, 9.8244286, 26.415596, 39.999977, 40, 17.556252,
	39.999977, 35.957397, 39.999977, 39.999977, 31.647446, 0.1150402, 39.376541,
	40, 23.167147, 40, 34.117622, 30.02499, 38.75309, 20.050011, 40, 13.304193,
	39.999969, 40, 13.085302, 30.024992, 39.999969, 17.556252, 25.03751, 39.999966,
	40 };

static const neurons_size_t modelOutputNeurons[] = {
	41, 17, 36, 55, 32, 57, 64, 38, 46, 52, 66, 60, 49, 29 };

#endif // INCLUDED_BY_NEUTON_C


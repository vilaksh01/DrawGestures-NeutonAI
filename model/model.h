#ifdef INCLUDED_BY_NEUTON_C

/* Model info */
#define NEUTON_MODEL_HEADER_VERSION 1
#define NEUTON_MODEL_QLEVEL 32
#define NEUTON_MODEL_FLOAT_SUPPORT 1
#define NEUTON_MODEL_TASK_TYPE 0  // multiclass classification
#define NEUTON_MODEL_NEURONS_COUNT 15
#define NEUTON_MODEL_WEIGHTS_COUNT 84
#define NEUTON_MODEL_INPUTS_COUNT 255
#define NEUTON_MODEL_INPUT_LIMITS_COUNT 255
#define NEUTON_MODEL_OUTPUTS_COUNT 4
#define NEUTON_MODEL_LOG_SCALE_OUTPUTS 0

/* Preprocessing */
#define NEUTON_PREPROCESSING_ENABLED 0
#define NEUTON_BITMASK_ENABLED 0

/* Limits */
static const float modelInputMin[] = {
	9053, 12349, 12345, 13607, 14874, 17097, 18641, 18645, 17663, 14463, 12223,
	10625, 9988, 9673, 9680, 10648, 11297, 12582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
static const float modelInputMax[] = {
	71783, 70145, 65379, 63778, 62157, 60236, 59596, 57676, 57383, 60271, 61879,
	64542, 67756, 70648, 72259, 73548, 76761, 83507, 63156, 64760, 66500, 67337,
	67985, 68631, 68957, 68962, 69285, 69288, 69291, 69293, 69295, 69296, 69299,
	63433, 64075, 64717, 65360, 66004, 66649, 66974, 67299, 67624, 67629, 67635,
	67641, 67327, 66695, 66382, 66067, 65751, 65434, 65437, 65439, 65121, 65122,
	65123, 64804, 64807, 65109, 65093, 64802, 64487, 64492, 64175, 63859, 63542,
	65675, 67602, 68888, 69854, 70499, 70822, 71148, 65073, 66359, 67644, 67719,
	68373, 69028, 69619, 70550, 70257, 71170, 72142, 72475, 71851, 70908, 68590,
	69234, 69878, 70201, 70572, 71219, 71546, 71553, 71559, 71565, 71569, 75457,
	71574, 71576, 71816, 72140, 72464, 72466, 72788, 72790, 72792, 72795, 69543,
	69865, 69867, 69887, 69890, 65773, 66365, 66691, 67017, 67025, 67032, 66717,
	66722, 66405, 66988, 67314, 67639, 67964, 67968, 68292, 68307, 68312, 68316,
	68319, 68322, 68324, 68326, 68327, 68328, 67645, 67646, 67648, 66705, 67352,
	67678, 67685, 68010, 68015, 68019, 68023, 68026, 68028, 68031, 68032, 68033,
	68034, 68035, 68036, 66316, 66320, 66644, 66647, 66649, 66651, 66653, 67922,
	69206, 70491, 71457, 72103, 72750, 73077, 73084, 73092, 73099, 72785, 72790,
	72473, 72476, 72478, 72160, 72161, 72162, 72163, 72164, 72165, 71848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

static const float modelOutputMin[] = { 0, 0, 0, 0 };
static const float modelOutputMax[] = { 1, 1, 1, 1 };

/* Types */
typedef float coeff_t;
typedef float weight_t;
typedef double acc_signed_t;
typedef double acc_unsigned_t;
typedef uint8_t sources_size_t;
typedef uint8_t weights_size_t;
typedef uint8_t neurons_size_t;

/* Structure */
static const weight_t modelWeights[] = {
	0.5005281, 0.39154619, -0.93328846, 0.033684235, -0.1602513, 0.16625565,
	0.81802183, 0.89207911, -0.50072914, 0.99999952, 0.99999857, 0, -0.31315804,
	-0.83784401, 0.53707552, -0.66615087, -0.91533285, 0.73473036, 0.66406178,
	0.16621777, 0.44357157, -0.98175263, 0.39414743, 0.48708791, -0.055739284,
	-1, -0.44203237, 0.94618624, 0.33433196, -0.12166823, 0.43984795, -1, 1,
	0.014401339, 0.074185848, 0, -0.11202477, -0.5, 0.35571682, 0.30018228,
	-0.42472225, -1, -1, -0.23116043, 0.77014744, -0.49385452, 0.19965988,
	-1, -1, 0.0045066774, -1, -0.91491228, 0.17184359, -1, -0.0342502, 1, 0.55499232,
	-1, -0.875, -0.71135867, -0.74520361, 0.795753, 0.47754365, -0.52286923,
	0.6056217, -0.99999583, -0.26395354, 0.44406891, 0.65445709, -0.75139713,
	1, -0.31835049, 0.41600385, -0.84715408, 0.92693383, -0.28104025, -0.32550722,
	-1, -1, 0.12238312, -0.99999988, -1, -0.80245376, 0.20010659 };

static const sources_size_t modelLinks[] = {
	6, 12, 41, 53, 80, 255, 2, 10, 18, 76, 84, 154, 255, 0, 15, 55, 67, 118,
	255, 2, 3, 10, 19, 80, 255, 1, 4, 37, 52, 70, 255, 2, 28, 51, 60, 75, 85,
	255, 15, 41, 42, 57, 75, 255, 0, 32, 68, 114, 150, 255, 3, 7, 255, 4, 7,
	32, 78, 163, 255, 2, 4, 9, 255, 0, 1, 2, 3, 8, 255, 1, 6, 11, 255, 38,
	57, 82, 83, 95, 131, 255, 0, 5, 13, 255 };

static const weights_size_t modelIntLinksBoundaries[] = {
	0, 6, 14, 20, 26, 31, 38, 44, 52, 53, 62, 67, 72, 73, 83 };
static const weights_size_t modelExtLinksBoundaries[] = {
	6, 13, 19, 25, 31, 38, 44, 50, 53, 59, 63, 69, 73, 80, 84 };

static const coeff_t modelFuncCoeffs[] = {
	27.531219, 17.457619, 39.999985, 37.506241, 39.999992, 39.999992, 16.235554,
	40, 34.811981, 39.999981, 8.9291439, 40, 40, 18.179689, 27.046993 };

static const neurons_size_t modelOutputNeurons[] = { 14, 12, 10, 8 };

#endif // INCLUDED_BY_NEUTON_C
